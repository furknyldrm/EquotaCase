{"remainingRequest":"/Users/furkanyildirim/Documents/Github/EquotaCase/node_modules/babel-loader/lib/index.js!/Users/furkanyildirim/Documents/Github/EquotaCase/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/furkanyildirim/Documents/Github/EquotaCase/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/furkanyildirim/Documents/Github/EquotaCase/src/@core/layouts/components/layout-content-renderer/LayoutContentRendererLeftDetached.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/furkanyildirim/Documents/Github/EquotaCase/src/@core/layouts/components/layout-content-renderer/LayoutContentRendererLeftDetached.vue","mtime":1611064082000},{"path":"/Users/furkanyildirim/Documents/Github/EquotaCase/babel.config.js","mtime":1611064082000},{"path":"/Users/furkanyildirim/Documents/Github/EquotaCase/node_modules/cache-loader/dist/cjs.js","mtime":1661697115440},{"path":"/Users/furkanyildirim/Documents/Github/EquotaCase/node_modules/babel-loader/lib/index.js","mtime":1661697117710},{"path":"/Users/furkanyildirim/Documents/Github/EquotaCase/node_modules/cache-loader/dist/cjs.js","mtime":1661697115440},{"path":"/Users/furkanyildirim/Documents/Github/EquotaCase/node_modules/vue-loader/lib/index.js","mtime":1661697120420}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEFwcEJyZWFkY3J1bWIgZnJvbSAnQGNvcmUvbGF5b3V0cy9jb21wb25lbnRzL0FwcEJyZWFkY3J1bWIudnVlJzsKaW1wb3J0IHVzZUFwcENvbmZpZyBmcm9tICdAY29yZS9hcHAtY29uZmlnL3VzZUFwcENvbmZpZyc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBBcHBCcmVhZGNydW1iCiAgfSwKCiAgc2V0dXAoKSB7CiAgICBjb25zdCB7CiAgICAgIHJvdXRlclRyYW5zaXRpb24sCiAgICAgIGNvbnRlbnRXaWR0aAogICAgfSA9IHVzZUFwcENvbmZpZygpOwogICAgcmV0dXJuIHsKICAgICAgcm91dGVyVHJhbnNpdGlvbiwKICAgICAgY29udGVudFdpZHRoCiAgICB9OwogIH0KCn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AAEA;EACAA;IACAC;EADA,CADA;;EAIAC;IACA;MAAAC;MAAAC;IAAA;IAEA;MACAD,gBADA;MACAC;IADA;EAGA;;AAVA","names":["components","AppBreadcrumb","setup","routerTransition","contentWidth"],"sourceRoot":"src/@core/layouts/components/layout-content-renderer","sources":["LayoutContentRendererLeftDetached.vue"],"sourcesContent":["<template>\n  <div\n    class=\"app-content content\"\n    :class=\"[{'show-overlay': $store.state.app.shallShowOverlay}, $route.meta.contentClass]\"\n  >\n    <div class=\"content-overlay\" />\n    <div class=\"header-navbar-shadow\" />\n    <transition\n      :name=\"routerTransition\"\n      mode=\"out-in\"\n    >\n      <div\n        class=\"content-wrapper clearfix\"\n        :class=\"contentWidth === 'boxed' ? 'container p-0' : null\"\n      >\n        <slot name=\"breadcrumb\">\n          <app-breadcrumb />\n        </slot>\n        <div class=\"content-detached content-right\">\n          <div class=\"content-wrapper\">\n            <div class=\"content-body\">\n              <slot />\n            </div>\n          </div>\n        </div>\n        <portal-target\n          name=\"content-renderer-sidebar-detached-left\"\n          slim\n        />\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport AppBreadcrumb from '@core/layouts/components/AppBreadcrumb.vue'\nimport useAppConfig from '@core/app-config/useAppConfig'\n\nexport default {\n  components: {\n    AppBreadcrumb,\n  },\n  setup() {\n    const { routerTransition, contentWidth } = useAppConfig()\n\n    return {\n      routerTransition, contentWidth,\n    }\n  },\n}\n</script>\n\n<style>\n\n</style>\n"]}]}